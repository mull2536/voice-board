name: Claude Code CI/CD

on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ master, main ]
  workflow_dispatch:
    inputs:
      claude_task:
        description: 'Task for Claude to perform'
        required: true
        default: 'Review code and suggest improvements'

permissions:
  contents: write
  pull-requests: write
  issues: write
  actions: read

jobs:
  claude-code-review:
    runs-on: ubuntu-latest
    name: Claude Code Analysis

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run tests (if available)
      run: |
        if [ -f "package.json" ] && grep -q '"test"' package.json; then
          npm test || echo "Tests failed or not configured"
        else
          echo "No tests configured"
        fi
      continue-on-error: true

    - name: Build project
      run: |
        if [ -f "package.json" ] && grep -q '"build"' package.json; then
          npm run build || echo "Build failed or not configured"
        else
          echo "No build script configured"
        fi
      continue-on-error: true

    - name: Install Claude Code
      run: npm install -g @anthropic-ai/claude-code

    - name: Run Claude Code Analysis
      env:
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
      run: |
        # Create a task file for Claude
        cat > claude_task.md << 'EOF'
        # Voice Command Board - Claude Code Analysis

        Please analyze this React-based voice command board application and provide:

        1. **React Code Quality Review**:
           - Check component structure and organization
           - Review hooks usage and state management
           - Identify potential React anti-patterns
           - Suggest performance optimizations (memoization, lazy loading)

        2. **UI/UX Architecture Assessment**:
           - Review grid component implementation
           - Assess hover-to-activate functionality
           - Check responsive design patterns
           - Evaluate accessibility features

        3. **ElevenLabs Integration Review**:
           - Validate API integration patterns
           - Check audio storage and caching implementation
           - Review error handling for API failures
           - Assess audio quality and format handling

        4. **Voice Command Board Specific**:
           - Review grid button categorization system
           - Check drag-and-drop implementation
           - Validate settings modal functionality
           - Assess local storage usage patterns

        5. **Performance & Security**:
           - Check for memory leaks in audio handling
           - Review API key management
           - Validate client-side storage security
           - Suggest bundle size optimizations

        6. **Code Structure & Maintainability**:
           - Review component hierarchy and props drilling
           - Check for proper separation of concerns
           - Assess custom hooks implementation
           - Suggest improvements for code reusability

        Please provide actionable recommendations with specific file references and code examples where applicable.
        EOF

        # Run Claude Code with the task
        echo "Running Claude Code analysis..."
        claude --api-key="$ANTHROPIC_API_KEY" < claude_task.md > claude_analysis.md || echo "Claude analysis completed with warnings"

        # Display results
        echo "## Claude Code Analysis Results" >> $GITHUB_STEP_SUMMARY
        cat claude_analysis.md >> $GITHUB_STEP_SUMMARY

    - name: Upload Analysis Results
      uses: actions/upload-artifact@v4
      with:
        name: claude-analysis-${{ github.sha }}
        path: claude_analysis.md
        retention-days: 30

  claude-code-task:
    runs-on: ubuntu-latest
    name: Custom Claude Task
    if: github.event_name == 'workflow_dispatch'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install Claude Code
      run: npm install -g @anthropic-ai/claude-code

    - name: Run Custom Claude Task
      env:
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
      run: |
        echo "${{ github.event.inputs.claude_task }}" | claude --api-key="$ANTHROPIC_API_KEY" > custom_task_result.md

        echo "## Custom Task Results" >> $GITHUB_STEP_SUMMARY
        cat custom_task_result.md >> $GITHUB_STEP_SUMMARY

    - name: Upload Task Results
      uses: actions/upload-artifact@v4
      with:
        name: claude-custom-task-${{ github.sha }}
        path: custom_task_result.md
        retention-days: 30